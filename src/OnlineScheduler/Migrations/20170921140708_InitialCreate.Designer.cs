// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using OnlineScheduler.Models;
using System;

namespace OnlineScheduler.Migrations
{
    [DbContext(typeof(SchedulerContext))]
    [Migration("20170921140708_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("OnlineScheduler.Models.Plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AutoFinish");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset>("DueTime");

                    b.Property<bool>("IsFinished");

                    b.Property<string>("PlanName");

                    b.Property<DateTimeOffset>("StartTime");

                    b.Property<string>("UserEmail");

                    b.HasKey("PlanId");

                    b.HasIndex("UserEmail");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("OnlineScheduler.Models.User", b =>
                {
                    b.Property<string>("EmailAddress")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password")
                        .HasMaxLength(30);

                    b.Property<DateTimeOffset>("RegisterDate");

                    b.Property<string>("Username")
                        .HasMaxLength(30);

                    b.HasKey("EmailAddress");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineScheduler.Models.Plan", b =>
                {
                    b.HasOne("OnlineScheduler.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("UserEmail");
                });
#pragma warning restore 612, 618
        }
    }
}
